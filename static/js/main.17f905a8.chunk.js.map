{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","App.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","error","isLoading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","axios","defaults","baseURL","getContacts","getFilterValue","getFilteredList","createSelector","normalizedQuery","toLowerCase","name","includes","INIT_STATE","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onAddContact","newContact","a","post","data","addContact","handleChange","e","currentTarget","value","reset","preventSimilar","newContactName","normalizedName","find","className","s","form","onSubmit","preventDefault","alert","autoComplete","type","pattern","title","onChange","required","button","ContactListItem","onDelete","contactItem","onClick","ContactList","useEffect","get","onDeleteContact","contactId","delete","map","Filter","label","eve","target","Section","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,8B,mBCA5DD,EAAOC,QAAU,CAAC,YAAc,qCAAqC,OAAS,kC,mBCA9ED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mBCA1DD,EAAOC,QAAU,CAAC,SAAW,gC,mBCA7BD,EAAOC,QAAU,CAAC,IAAM,mB,2ICCXC,EAAuBC,YAAa,iCACpCC,EAAuBD,YAAa,iCACpCE,EAAqBF,YAAa,+BAElCG,EAAoBH,YAAa,uBACjCI,EAAoBJ,YAAa,uBACjCK,EAAkBL,YAAa,qBAE/BM,EAAuBN,YAAa,0BACpCO,EAAuBP,YAAa,0BACpCQ,EAAqBR,YAAa,wBAElCS,EAAeT,YAAa,yBCAnCU,EAAQC,YAAc,IAAD,mBACxBV,GAAuB,SAACW,EAAD,YAAMC,WADL,cAExBT,GAAoB,SAACU,EAAD,YAAUD,SAAV,mBAAqCC,OAFjC,cAGxBP,GAAuB,SAACO,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACtBC,EAAMC,QAAO,qBAAGC,KAAgBH,QAJT,IAOrBE,EAASJ,YAAc,GAAD,eACzBF,GAAe,SAACG,EAAD,YAAMC,YAGlBI,EAAQN,YAAc,MAAD,mBACxBT,GAAqB,SAACU,EAAD,YAAMC,WADH,cAExBR,GAAkB,SAACO,EAAD,YAAMC,WAFA,cAGxBL,GAAqB,SAACI,EAAD,YAAMC,WAHH,cAIxBd,GAAuB,kBAAM,QAJL,cAKxBI,GAAoB,kBAAM,QALF,cAMxBG,GAAuB,kBAAM,QANL,IASrBY,EAAYP,aAAc,GAAD,mBAC5BZ,GAAuB,kBAAM,KADD,cAE5BE,GAAuB,kBAAM,KAFD,cAG5BC,GAAqB,kBAAM,KAHC,cAI5BC,GAAoB,kBAAM,KAJE,cAK5BC,GAAoB,kBAAM,KALE,cAM5BC,GAAkB,kBAAM,KANI,cAO5BC,GAAuB,kBAAM,KAPD,cAQ5BC,GAAuB,kBAAM,KARD,cAS5BC,GAAqB,kBAAM,KATC,IAYhBW,cAAgB,CAC7BT,QACAK,SACAG,YACAD,UCxCaG,EAPDC,YAAe,CAC3BC,QAAS,CACPC,SAAUC,K,yECQdC,IAAMC,SAASC,QAAU,wBAElB,I,QCbMC,EAAc,SAAAd,GAAK,OAAIA,EAAMS,SAASb,OAEtCmB,EAAiB,SAAAf,GAAK,OAAIA,EAAMS,SAASR,QAEzCe,EAAkBC,YAC7B,CAACH,EAAaC,IACd,SAACN,EAAUR,GACT,IAAMiB,EAAkBjB,EAAOkB,cAE/B,OAAOV,EAASR,QAAO,qBAAGmB,KACnBD,cAAcE,SAASH,S,OCN5BI,EACE,GADFA,EAEI,GA0EKC,EAvEK,WAAO,IAAD,EACAC,mBAAS,IADT,mBACjBJ,EADiB,KACXK,EADW,OAEID,mBAAS,IAFb,mBAEjBE,EAFiB,KAETC,EAFS,KAIlBlB,EAAWmB,YAAYd,GACvBe,EAAWC,cAEXC,EAAe,SAAAC,GAAU,OAAIH,EFOX,SAAAG,GAAU,8CAAI,WAAMH,GAAN,iBAAAI,EAAA,6DACtCJ,EAASxC,KAD6B,kBAGbsB,IAAMuB,KAAK,YAAaF,GAHX,gBAG5BG,EAH4B,EAG5BA,KACRN,EAASvC,EAAkB6C,IAJS,gDAMpCN,EAAStC,EAAgB,EAAD,KANY,yDAAJ,sDEPU6C,CAAWJ,KAEjDK,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAEC,cAAlBnB,EADgB,EAChBA,KAAMoB,EADU,EACVA,MACL,SAATpB,EAAkBK,EAAQe,GAASb,EAAUa,IAezCC,EAAQ,WACZhB,EAAQH,GACRK,EAAUL,IAGNoB,EAAiB,SAAAC,GACrB,IAAMC,EAAiBD,EAAexB,cAEtC,OAAOV,EAASoC,MAAK,qBAAGzB,KAAgBD,cAAcE,SAASuB,OAGjE,OACE,uBAAME,UAAWC,IAAEC,KAAMC,SAxBN,SAAAX,GACnBA,EAAEY,iBAEER,EAAetB,GACjB+B,MAAM,GAAD,OAAI/B,EAAJ,+BAELW,EAAa,CAAEX,OAAMM,WAErBe,MAgB+CW,aAAa,MAA9D,UACE,sEACA,yCAEE,uBACEC,KAAK,OACLjC,KAAK,OACLkC,QAAQ,yHACRC,MAAM,kcACNf,MAAOpB,EACPoC,SAAUnB,EACVoB,UAAQ,OAGZ,2CAEE,uBACEJ,KAAK,MACLjC,KAAK,SACLkC,QAAQ,+FACRC,MAAM,mlBACNf,MAAOd,EACP8B,SAAUnB,EACVoB,UAAQ,OAGZ,wBAAQX,UAAWC,IAAEW,OAAQL,KAAK,SAAlC,6B,iBCtDSM,EAlBS,SAAC,GAAoC,IAAlCvC,EAAiC,EAAjCA,KAAMM,EAA2B,EAA3BA,OAAQxB,EAAmB,EAAnBA,GAAI0D,EAAe,EAAfA,SAC3C,OACE,qBAAId,UAAWC,IAAEc,YAAjB,UACGzC,EADH,KACWM,EACT,wBAAQoB,UAAWC,IAAEW,OAAQL,KAAK,SAASS,QAAS,kBAAMF,EAAS1D,IAAnE,wB,iBCyBS6D,EAzBK,WAClB,IAAMtD,EAAWmB,aAAY,SAAA5B,GAAK,OAAIgB,EAAgBhB,MAChD6B,EAAWC,cAEjBkC,qBAAU,WACRnC,EJGyB,uCAAM,WAAMA,GAAN,iBAAAI,EAAA,6DACjCJ,EAAS5C,KADwB,kBAGR0B,IAAMsD,IAAI,aAHF,gBAGvB9B,EAHuB,EAGvBA,KACRN,EAAS1C,EAAqBgD,IAJC,gDAM/BN,EAASzC,EAAmB,EAAD,KANI,yDAAN,yDIFxB,CAACyC,IAEJ,IAAMqC,EAAkB,SAAAhE,GAAE,OAAI2B,GJoBHsC,EIpB0BjE,EJoBjB,uCAAI,WAAM2B,GAAN,SAAAI,EAAA,6DACxCJ,EAASrC,KAD+B,kBAGhCmB,IAAMyD,OAAN,oBAA0BD,IAHM,OAItCtC,EAASpC,EAAqB0E,IAJQ,gDAMtCtC,EAASnC,EAAmB,EAAD,KANW,yDAAJ,wDAAT,IAAAyE,GIlB3B,OACE,oBAAIrB,UAAWC,IAAEtC,SAAjB,SACGA,EAAS4D,KAAI,gBAAGjD,EAAH,EAAGA,KAAMM,EAAT,EAASA,OAAQxB,EAAjB,EAAiBA,GAAjB,OACZ,cAAC,EAAD,CACEkB,KAAMA,EACNM,OAAQA,EACRxB,GAAIA,EACJ0D,SAAUM,GACLhE,S,kBCDAoE,GAnBA,WACb,IAAM9B,EAAQZ,YAAYb,GACpBc,EAAWC,cAIjB,OACE,wBAAOgB,UAAWC,KAAEwB,MAApB,kCAEE,uBACEzB,UAAWC,KAAE9C,OACboD,KAAK,OACLb,MAAOA,EACPgB,SATiB,SAAAgB,GAAG,OAAI3C,EAASlC,EAAa6E,EAAIC,OAAOjC,eCOlDkC,GAdC,SAAC,GAAyB,IAAvBnB,EAAsB,EAAtBA,MAAOoB,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKpB,IACJoB,M,oBCcQC,GAdH,WACV,OACE,sBAAK9B,UAAWC,KAAE6B,IAAlB,UACE,cAAC,GAAD,CAASrB,MAAM,YAAf,SACE,cAAC,EAAD,MAEF,eAAC,GAAD,CAASA,MAAM,WAAf,UACE,cAAC,GAAD,IACA,cAAC,EAAD,WCPRsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUzE,MAAOA,EAAjB,SACE,cAAC,GAAD,QAGJ0E,SAASC,eAAe,W","file":"static/js/main.17f905a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__12W1a\",\"button\":\"ContactForm_button__-gu2R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__2r-KX\",\"button\":\"ContactListItem_button__1W6ea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1-hNH\",\"label\":\"Filter_label__3ZouN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2tTNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__UPuM2\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addRequest');\r\nexport const addContactSuccess = createAction('contacts/addSuccess');\r\nexport const addContactError = createAction('contacts/addError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [fetchContactsRequest]: () => null,\r\n  [addContactRequest]: () => null,\r\n  [deleteContactRequest]: () => null,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  // devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3004';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = newContact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', newContact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilterValue = state => state.contacts.filter;\r\n\r\nexport const getFilteredList = createSelector(\r\n  [getContacts, getFilterValue],\r\n  (contacts, filter) => {\r\n    const normalizedQuery = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedQuery),\r\n    );\r\n  },\r\n);\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport s from 'Components/ContactForm/ContactForm.module.css';\r\nimport { addContact } from 'redux/contacts/contacts-operations';\r\nimport { getContacts } from 'redux/contacts/contacts-selectors';\r\n\r\nconst INIT_STATE = {\r\n  NAME: '',\r\n  NUMBER: '',\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddContact = newContact => dispatch(addContact(newContact));\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    name === 'name' ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (preventSimilar(name)) {\r\n      alert(`${name} is already in contacts^^`);\r\n    } else {\r\n      onAddContact({ name, number });\r\n\r\n      reset();\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(INIT_STATE.NAME);\r\n    setNumber(INIT_STATE.NUMBER);\r\n  };\r\n\r\n  const preventSimilar = newContactName => {\r\n    const normalizedName = newContactName.toLowerCase();\r\n\r\n    return contacts.find(({ name }) => name.toLowerCase().includes(normalizedName));\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <h3>Did you already find a new friend?^^</h3>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from 'Components/ContactList/ContactListItem/ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDelete }) => {\r\n  return (\r\n    <li className={s.contactItem}>\r\n      {name}: {number}\r\n      <button className={s.button} type=\"button\" onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport ContactListItem from 'Components/ContactList/ContactListItem/ContactListItem';\r\nimport s from 'Components/ContactList/ContactList.module.css';\r\nimport { deleteContact, fetchContacts } from 'redux/contacts/contacts-operations';\r\nimport { getFilteredList } from 'redux/contacts/contacts-selectors';\r\nimport { useEffect } from 'react';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(state => getFilteredList(state));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.contacts}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          onDelete={onDeleteContact}\r\n          key={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport s from 'Components/Filter/Filter.module.css';\r\nimport { changeFilter } from 'redux/contacts/contacts-actions';\r\nimport { getFilterValue } from 'redux/contacts/contacts-selectors';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilterValue);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFilter = eve => dispatch(changeFilter(eve.target.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filter}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import ContactForm from 'Components/ContactForm/ContactForm';\r\nimport ContactList from 'Components/ContactList/ContactList';\r\nimport Filter from 'Components/Filter/Filter';\r\nimport Section from 'Components/Section/Section';\r\nimport s from './App.module.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={s.App}>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}